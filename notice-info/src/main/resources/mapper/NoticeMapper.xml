<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunli.bigdata.notice.dao.NoticeDAO" >
  <resultMap id="BaseResultMap" type="com.yunli.bigdata.notice.model.Notice" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="system_sign" property="systemSign" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="notice_user_id" property="noticeUserId" jdbcType="VARCHAR" />
    <result column="notice_user_name" property="noticeUserName" jdbcType="VARCHAR" />
    <result column="status_id" property="statusId" jdbcType="VARCHAR" />
    <result column="is_app" property="isApp" jdbcType="VARCHAR" />
    <result column="app_url" property="appUrl" jdbcType="VARCHAR" />
    <result column="notice_time" property="noticeTime" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, system_sign, title, url, notice_user_id, notice_user_name, status_id, is_app, 
    app_url, notice_time, read_time, is_deleted, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from dwd_ssm_notice_info_rt
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from dwd_ssm_notice_info_rt
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yunli.bigdata.notice.model.Notice" >
    insert into dwd_ssm_notice_info_rt (id, system_sign, title, 
      url, notice_user_id, notice_user_name, 
      status_id, is_app, app_url, 
      notice_time, read_time, is_deleted, 
      gmt_create, gmt_modified)
    values (#{id,jdbcType=VARCHAR}, #{systemSign,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{noticeUserId,jdbcType=VARCHAR}, #{noticeUserName,jdbcType=VARCHAR}, 
      #{statusId,jdbcType=VARCHAR}, #{isApp,jdbcType=VARCHAR}, #{appUrl,jdbcType=VARCHAR}, 
      #{noticeTime,jdbcType=VARCHAR}, #{readTime,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yunli.bigdata.notice.model.Notice" >
    insert into dwd_ssm_notice_info_rt
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="systemSign != null" >
        system_sign,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="noticeUserId != null" >
        notice_user_id,
      </if>
      <if test="noticeUserName != null" >
        notice_user_name,
      </if>
      <if test="statusId != null" >
        status_id,
      </if>
      <if test="isApp != null" >
        is_app,
      </if>
      <if test="appUrl != null" >
        app_url,
      </if>
      <if test="noticeTime != null" >
        notice_time,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="systemSign != null" >
        #{systemSign,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="noticeUserId != null" >
        #{noticeUserId,jdbcType=VARCHAR},
      </if>
      <if test="noticeUserName != null" >
        #{noticeUserName,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null" >
        #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="isApp != null" >
        #{isApp,jdbcType=VARCHAR},
      </if>
      <if test="appUrl != null" >
        #{appUrl,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null" >
        #{noticeTime,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunli.bigdata.notice.model.Notice" >
    update dwd_ssm_notice_info_rt
    <set >
      <if test="systemSign != null" >
        system_sign = #{systemSign,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="noticeUserId != null" >
        notice_user_id = #{noticeUserId,jdbcType=VARCHAR},
      </if>
      <if test="noticeUserName != null" >
        notice_user_name = #{noticeUserName,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null" >
        status_id = #{statusId,jdbcType=VARCHAR},
      </if>
      <if test="isApp != null" >
        is_app = #{isApp,jdbcType=VARCHAR},
      </if>
      <if test="appUrl != null" >
        app_url = #{appUrl,jdbcType=VARCHAR},
      </if>
      <if test="noticeTime != null" >
        notice_time = #{noticeTime,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunli.bigdata.notice.model.Notice" >
    update dwd_ssm_notice_info_rt
    set system_sign = #{systemSign,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      notice_user_id = #{noticeUserId,jdbcType=VARCHAR},
      notice_user_name = #{noticeUserName,jdbcType=VARCHAR},
      status_id = #{statusId,jdbcType=VARCHAR},
      is_app = #{isApp,jdbcType=VARCHAR},
      app_url = #{appUrl,jdbcType=VARCHAR},
      notice_time = #{noticeTime,jdbcType=VARCHAR},
      read_time = #{readTime,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <insert id="insertBatch" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into dwd_ssm_notice_info_rt
      <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="item.id != null" >
          id,
        </if>
        <if test="item.systemSign != null" >
          system_sign,
        </if>
        <if test="item.title != null" >
          title,
        </if>
        <if test="item.url != null" >
          url,
        </if>
        <if test="item.noticeUserId != null" >
          notice_user_id,
        </if>
        <if test="item.noticeUserName != null" >
          notice_user_name,
        </if>
        <if test="item.isApp != null" >
          is_app,
        </if>
        <if test="item.appUrl != null" >
          app_url,
        </if>
        <if test="item.statusId != null" >
          status_id,
        </if>
        <if test="item.noticeTime != null" >
          notice_time,
        </if>
        <if test="item.readTime != null" >
          read_time,
        </if>
        <if test="item.isDeleted != null" >
          is_deleted,
        </if>
        <if test="item.gmtCreate != null" >
          gmt_create,
        </if>
        <if test="item.gmtModified != null" >
          gmt_modified,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="item.id != null" >
          #{item.id,jdbcType=VARCHAR},
        </if>
        <if test="item.systemSign != null" >
          #{item.systemSign,jdbcType=VARCHAR},
        </if>
        <if test="item.title != null" >
          #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.url != null" >
          #{item.url,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeUserId != null" >
          #{item.noticeUserId,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeUserName != null" >
          #{item.noticeUserName,jdbcType=VARCHAR},
        </if>
        <if test="item.isApp != null" >
          #{item.isApp,jdbcType=VARCHAR},
        </if>
        <if test="item.appUrl != null" >
          #{item.appUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.statusId != null" >
          #{item.statusId,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeTime != null" >
          #{item.noticeTime,jdbcType=VARCHAR},
        </if>
        <if test="item.readTime != null" >
          #{item.readTime,jdbcType=VARCHAR},
        </if>
        <if test="item.isDeleted != null" >
          #{item.isDeleted,jdbcType=BIT},
        </if>
        <if test="item.gmtCreate != null" >
          #{item.gmtCreate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.gmtModified != null" >
          #{item.gmtModified,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </foreach>
  </insert>

  <update id="updateBatch" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update dwd_ssm_notice_info_rt
      <set >
        <if test="item.systemSign != null" >
          system_sign = #{item.systemSign,jdbcType=VARCHAR},
        </if>
        <if test="item.title != null" >
          title = #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.url != null" >
          url = #{item.url,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeUserId != null" >
          notice_user_id = #{item.noticeUserId,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeUserName != null" >
          notice_user_name = #{item.noticeUserName,jdbcType=VARCHAR},
        </if>
        <if test="item.isApp != null" >
          is_app = #{item.isApp,jdbcType=VARCHAR},
        </if>
        <if test="item.appUrl != null" >
          app_url = #{item.appUrl,jdbcType=VARCHAR},
        </if>
        <if test="item.statusId != null" >
          status_id = #{item.statusId,jdbcType=VARCHAR},
        </if>
        <if test="item.noticeTime != null" >
          notice_time = #{item.noticeTime,jdbcType=VARCHAR},
        </if>
        <if test="item.readTime != null" >
          read_time = #{item.readTime,jdbcType=VARCHAR},
        </if>
        <if test="item.isDeleted != null" >
          is_deleted = #{item.isDeleted,jdbcType=BIT},
        </if>
        <if test="item.gmtCreate != null" >
          gmt_create = #{item.gmtCreate,jdbcType=TIMESTAMP},
        </if>
        <if test="item.gmtModified != null" >
          gmt_modified = #{item.gmtModified,jdbcType=TIMESTAMP},
        </if>
      </set>
      where id = #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>

  <update id="deleteBatch" parameterType="java.util.List">
    update dwd_ssm_notice_info_rt
    set is_deleted = 1,
    gmt_modified = now()
    where id in
    <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>
</mapper>